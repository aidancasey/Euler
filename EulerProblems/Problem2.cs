using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EulerProblems
{
    public class Problem2 : IProblem
    {
        //     Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

        //     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

        //By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


        public void Solution_First_Attempt()
        {
            int fib0 = 1;
            int fib1= 2;
            int nextFib;
            int totalAllEvens = 2;
            do
            {
                nextFib = NextFibonacciNumber(fib0, fib1);
                fib0 = fib1;
                fib1 = nextFib;
                if (fib1 % 2 == 0)
                {
                    totalAllEvens += fib1;
                }
            } while (nextFib < 4000000);
            
            Console.WriteLine("answer is " + totalAllEvens);
        }

        private int NextFibonacciNumber(int fib0, int fib1)
        {
            return fib0  + fib1;
        }


        public string  Solve()
        {
            int startPosition = 0;
            int nextNumber = 0;
            int total = 0;
            do
            {
                nextNumber = Fibonacci(startPosition);
                if (nextNumber % 2 ==0)
                {
                    total +=nextNumber;
                }
                startPosition++;
                

            }while (nextNumber<4000000);

            return total.ToString();
        }

        private int Fibonacci(int sequenceNumber)
        {
            if (sequenceNumber == 0)
            {
                return 0;
            }

            if (sequenceNumber == 1)
            {
                return 1;
            }

            return Fibonacci(sequenceNumber - 1) + Fibonacci(sequenceNumber -2);
        }


    }
}